# Coolify Configuration File
# This file defines deployment settings for Coolify

# Application settings
name: social-media-scheduler
type: dockerfile

# Build configuration
build:
  dockerfile: Dockerfile.optimized
  context: .
  
# Resource limits - CRITICAL for preventing CPU spikes
resources:
  limits:
    memory: 800Mi      # Max 800MB RAM
    cpu: 1000m         # Max 1 CPU core (1000 millicores)
  requests:
    memory: 400Mi      # Request 400MB RAM
    cpu: 500m          # Request 0.5 CPU core

# Health check
healthcheck:
  enabled: true
  path: /api/health
  port: 3000
  interval: 30
  timeout: 10
  retries: 3
  start_period: 40

# Restart policy
restart_policy: unless-stopped

# Scaling
replicas: 1  # Single instance for 2-core VPS

# Network
expose: 3000
domains:
  - "scheduler.yourdomain.com"

# Environment variables (add your actual values in Coolify UI)
environment:
  - NODE_ENV=production
  - PORT=3000
  - NODE_OPTIONS=--max-old-space-size=512 --optimize-for-size
  - NEXT_TELEMETRY_DISABLED=1

# Volumes
volumes:
  - ./logs:/app/logs

# Labels for Traefik (if using Coolify's reverse proxy)
labels:
  - "traefik.enable=true"
  - "traefik.http.routers.scheduler.rule=Host(`scheduler.yourdomain.com`)"
  - "traefik.http.services.scheduler.loadbalancer.server.port=3000"
  - "traefik.http.routers.scheduler.tls=true"
  - "traefik.http.routers.scheduler.tls.certresolver=letsencrypt"

# Deployment strategy
deployment:
  strategy: recreate  # Use recreate for single instance
  
# Logging
logging:
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"